
/* gvSIG. Sistema de Información Geográfica de la Generalitat Valenciana
 *
 * Copyright (C) 2004 IVER T.I. and Generalitat Valenciana.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307,USA.
 *
 * For more information, contact:
 *
 *  Generalitat Valenciana
 *   Conselleria d'Infraestructures i Transport
 *   Av. Blasco Ibáñez, 50
 *   46010 VALENCIA
 *   SPAIN
 *
 *      +34 963862235
 *   gvsig@gva.es
 *      www.gvsig.gva.es
 *
 *    or
 *
 *   IVER T.I. S.A
 *   Salamanca 50
 *   46005 Valencia
 *   Spain
 *
 *   +34 963163400
 *   dac@iver.es
 */
package org.gvsig.catalog.ui.search;
import java.awt.GridBagConstraints;

import javax.swing.BorderFactory;
import javax.swing.JPanel;

import org.gvsig.catalog.querys.Coordinates;
import org.gvsig.catalog.utils.CatalogConstants;
import org.gvsig.catalog.utils.Doubles;
import org.gvsig.i18n.Messages;


/**
 * 
 * 
 * 
 * @author Jorge Piera Llodra (piera_jor@gva.es)
 */
public class SearchLowerPanel extends JPanel {
	private SearchAditionalPropertiesPanel aditionalPanel = null;

	private javax.swing.JLabel abstractLabel1;
	private javax.swing.JPanel abstractPanel1;
	private javax.swing.JTextField abstractText1;
	private javax.swing.JRadioButton allRButton;
	private javax.swing.JRadioButton anyRButton;
	private javax.swing.JLabel brxLabel;
	private javax.swing.JTextField brxText;
	private javax.swing.JLabel bryLabel;
	private javax.swing.JTextField bryText;
	private javax.swing.JComboBox cathegoryCombo;
	private javax.swing.JLabel cathegoryLabel;
	private javax.swing.JPanel cathegoryPanel;
	private javax.swing.ButtonGroup concordanciaGroupButton;
	private javax.swing.JPanel coordinatesPanel;
	private javax.swing.JComboBox coordinatesRelationshipCombo;
	private javax.swing.JPanel coordinatesRelationshipPanel;
	private javax.swing.JRadioButton exactRButton;
	private javax.swing.JLabel keywordsLabel;
	private javax.swing.JPanel keywordsPanel;
	private javax.swing.JTextField keywordsText;
	private javax.swing.JPanel leftDatesPanel;
	private javax.swing.JPanel leftPanel;
	private javax.swing.JPanel lowerCoordinatesPanel;
	private javax.swing.JLabel lowerUpdateLabel;
	private javax.swing.JTextField loweruperUpdateText;
	private javax.swing.JPanel nameOptionsPanel;
	private javax.swing.JLabel providerLabel;
	private javax.swing.JPanel providerPanel;
	private javax.swing.JTextField providerText;
	private javax.swing.JPanel rigthDatesPanel;
	private javax.swing.JPanel rigthPanel;
	private javax.swing.JPanel rigthUpperPanel;
	private javax.swing.JComboBox scaleCombo;
	private javax.swing.JLabel scaleLabel;
	private javax.swing.JPanel scalePanel;
	private javax.swing.JLabel ulxLabel;
	private javax.swing.JTextField ulxText;
	private javax.swing.JLabel ulyLabel;
	private javax.swing.JTextField ulyText;
	private javax.swing.JPanel updatePanel;
	private javax.swing.JLabel uperUpdateLabel;
	private javax.swing.JTextField uperUpdateText;
	private javax.swing.JPanel upperCoordinatesPanel;

	// End of variables declaration  
	public SearchLowerPanel(SearchAditionalPropertiesPanel aditionalPanel) {
		initComponents();
		initLabels();
		initDefaultValues();
		addOptionalPanel(aditionalPanel);
	}

	/**
	 * It adds the aditional panel
	 * @param aditionalPanel
	 */
	private void addOptionalPanel(SearchAditionalPropertiesPanel aditionalPanel){
		if (aditionalPanel != null){
			this.aditionalPanel = aditionalPanel;
			GridBagConstraints gridBagConstraints = new java.awt.GridBagConstraints();
			gridBagConstraints.gridx = 0;
			gridBagConstraints.gridy = 3;
			gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
			gridBagConstraints.weightx = 1.0;
			rigthUpperPanel.add(aditionalPanel, gridBagConstraints);
		}
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Generated Code ">                          
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		concordanciaGroupButton = new javax.swing.ButtonGroup();
		leftPanel = new javax.swing.JPanel();
		nameOptionsPanel = new javax.swing.JPanel();
		exactRButton = new javax.swing.JRadioButton();
		anyRButton = new javax.swing.JRadioButton();
		allRButton = new javax.swing.JRadioButton();
		abstractPanel1 = new javax.swing.JPanel();
		abstractLabel1 = new javax.swing.JLabel();
		abstractText1 = new javax.swing.JTextField();
		keywordsPanel = new javax.swing.JPanel();
		keywordsLabel = new javax.swing.JLabel();
		keywordsText = new javax.swing.JTextField();
		cathegoryPanel = new javax.swing.JPanel();
		cathegoryLabel = new javax.swing.JLabel();
		cathegoryCombo = new javax.swing.JComboBox();
		scalePanel = new javax.swing.JPanel();
		scaleLabel = new javax.swing.JLabel();
		scaleCombo = new javax.swing.JComboBox();
		providerPanel = new javax.swing.JPanel();
		providerLabel = new javax.swing.JLabel();
		providerText = new javax.swing.JTextField();
		rigthPanel = new javax.swing.JPanel();
		rigthUpperPanel = new javax.swing.JPanel();
		coordinatesPanel = new javax.swing.JPanel();
		upperCoordinatesPanel = new javax.swing.JPanel();
		ulxLabel = new javax.swing.JLabel();
		ulxText = new javax.swing.JTextField();
		ulyLabel = new javax.swing.JLabel();
		ulyText = new javax.swing.JTextField();
		lowerCoordinatesPanel = new javax.swing.JPanel();
		brxLabel = new javax.swing.JLabel();
		brxText = new javax.swing.JTextField();
		bryLabel = new javax.swing.JLabel();
		bryText = new javax.swing.JTextField();
		coordinatesRelationshipPanel = new javax.swing.JPanel();
		coordinatesRelationshipCombo = new javax.swing.JComboBox();
		updatePanel = new javax.swing.JPanel();
		rigthDatesPanel = new javax.swing.JPanel();
		uperUpdateLabel = new javax.swing.JLabel();
		lowerUpdateLabel = new javax.swing.JLabel();
		leftDatesPanel = new javax.swing.JPanel();
		loweruperUpdateText = new javax.swing.JTextField();
		uperUpdateText = new javax.swing.JTextField();

		setLayout(new java.awt.GridLayout(1, 0));

		leftPanel.setLayout(new java.awt.GridBagLayout());

		leftPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(2, 5, 2, 5));
		nameOptionsPanel.setLayout(new java.awt.GridBagLayout());

		nameOptionsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("concordancia"));
		concordanciaGroupButton.add(exactRButton);
		exactRButton.setText("jRadioButton1");
		exactRButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
		exactRButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 5, 0);
		nameOptionsPanel.add(exactRButton, gridBagConstraints);

		concordanciaGroupButton.add(anyRButton);
		anyRButton.setSelected(true);
		anyRButton.setText("jRadioButton1");
		anyRButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
		anyRButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 0);
		nameOptionsPanel.add(anyRButton, gridBagConstraints);

		concordanciaGroupButton.add(allRButton);
		allRButton.setText("jRadioButton2");
		allRButton.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
		allRButton.setMargin(new java.awt.Insets(0, 0, 0, 0));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 0);
		nameOptionsPanel.add(allRButton, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		leftPanel.add(nameOptionsPanel, gridBagConstraints);

		abstractPanel1.setLayout(new java.awt.GridBagLayout());

		abstractLabel1.setText("jLabel1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 0, 2, 0);
		abstractPanel1.add(abstractLabel1, gridBagConstraints);

		abstractText1.setText("jTextField1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
		abstractPanel1.add(abstractText1, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		leftPanel.add(abstractPanel1, gridBagConstraints);

		keywordsPanel.setLayout(new java.awt.GridBagLayout());

		keywordsLabel.setText("jLabel1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 0, 2, 0);
		keywordsPanel.add(keywordsLabel, gridBagConstraints);

		keywordsText.setText("jTextField1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
		keywordsPanel.add(keywordsText, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		leftPanel.add(keywordsPanel, gridBagConstraints);

		cathegoryPanel.setLayout(new java.awt.GridBagLayout());

		cathegoryLabel.setText("jLabel1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 0, 2, 0);
		cathegoryPanel.add(cathegoryLabel, gridBagConstraints);

		cathegoryCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Art\u00edculo 1", "Art\u00edculo 2", "Art\u00edculo 3", "Art\u00edculo 4" }));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 0, 5, 0);
		cathegoryPanel.add(cathegoryCombo, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		leftPanel.add(cathegoryPanel, gridBagConstraints);

		scalePanel.setLayout(new java.awt.GridBagLayout());

		scaleLabel.setText("jLabel1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 0, 2, 0);
		scalePanel.add(scaleLabel, gridBagConstraints);

		scaleCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Art\u00edculo 1", "Art\u00edculo 2", "Art\u00edculo 3", "Art\u00edculo 4" }));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 0, 5, 0);
		scalePanel.add(scaleCombo, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 4;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		leftPanel.add(scalePanel, gridBagConstraints);

		providerPanel.setLayout(new java.awt.GridBagLayout());

		providerLabel.setText("jLabel1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 0, 2, 0);
		providerPanel.add(providerLabel, gridBagConstraints);

		providerText.setText("jTextField1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
		providerPanel.add(providerText, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 5;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		leftPanel.add(providerPanel, gridBagConstraints);

		add(leftPanel);

		rigthPanel.setLayout(new java.awt.BorderLayout());

		rigthPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 3));
		rigthUpperPanel.setLayout(new java.awt.GridBagLayout());

		coordinatesPanel.setLayout(new java.awt.GridBagLayout());

		coordinatesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("coordinates"));
		upperCoordinatesPanel.setLayout(new java.awt.GridBagLayout());

		upperCoordinatesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("upper"));
		ulxLabel.setText("ULX:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.weightx = 0.15;
		upperCoordinatesPanel.add(ulxLabel, gridBagConstraints);

		ulxText.setText("jTextField1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 0.35;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
		upperCoordinatesPanel.add(ulxText, gridBagConstraints);

		ulyLabel.setText("ULY:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.weightx = 0.15;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
		upperCoordinatesPanel.add(ulyLabel, gridBagConstraints);

		ulyText.setText("jTextField1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 0.35;
		upperCoordinatesPanel.add(ulyText, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		coordinatesPanel.add(upperCoordinatesPanel, gridBagConstraints);

		lowerCoordinatesPanel.setLayout(new java.awt.GridBagLayout());

		lowerCoordinatesPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("lower"));
		brxLabel.setText("ULX:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.weightx = 0.15;
		lowerCoordinatesPanel.add(brxLabel, gridBagConstraints);

		brxText.setText("jTextField1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 0.35;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 2);
		lowerCoordinatesPanel.add(brxText, gridBagConstraints);

		bryLabel.setText("ULY:");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.weightx = 0.15;
		gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 0);
		lowerCoordinatesPanel.add(bryLabel, gridBagConstraints);

		bryText.setText("jTextField1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 0.35;
		lowerCoordinatesPanel.add(bryText, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		coordinatesPanel.add(lowerCoordinatesPanel, gridBagConstraints);

		coordinatesRelationshipPanel.setLayout(new java.awt.GridBagLayout());

		coordinatesRelationshipCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Art\u00edculo 1", "Art\u00edculo 2", "Art\u00edculo 3", "Art\u00edculo 4" }));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		coordinatesRelationshipPanel.add(coordinatesRelationshipCombo, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		coordinatesPanel.add(coordinatesRelationshipPanel, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		rigthUpperPanel.add(coordinatesPanel, gridBagConstraints);

		updatePanel.setLayout(new java.awt.GridBagLayout());

		updatePanel.setBorder(javax.swing.BorderFactory.createTitledBorder("update"));
		rigthDatesPanel.setLayout(new java.awt.GridBagLayout());

		uperUpdateLabel.setText("jLabel1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		rigthDatesPanel.add(uperUpdateLabel, gridBagConstraints);

		lowerUpdateLabel.setText("jLabel1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		rigthDatesPanel.add(lowerUpdateLabel, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		updatePanel.add(rigthDatesPanel, gridBagConstraints);

		leftDatesPanel.setLayout(new java.awt.GridBagLayout());

		loweruperUpdateText.setText("jTextField1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		leftDatesPanel.add(loweruperUpdateText, gridBagConstraints);

		uperUpdateText.setText("jTextField1");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
		leftDatesPanel.add(uperUpdateText, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		updatePanel.add(leftDatesPanel, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.weightx = 1.0;
		rigthUpperPanel.add(updatePanel, gridBagConstraints);

		rigthPanel.add(rigthUpperPanel, java.awt.BorderLayout.NORTH);

		add(rigthPanel);
	}// </editor-fold>                

	private void initLabels(){
		nameOptionsPanel.setBorder(BorderFactory.createTitledBorder(Messages.getText("concordancia")));
		exactRButton.setText(Messages.getText("exactSentence"));
		anyRButton.setText(Messages.getText("anyWord"));
		allRButton.setText(Messages.getText("allWords"));
		abstractLabel1.setText(Messages.getText("abstract"));
		keywordsLabel.setText(Messages.getText("keyWords"));
		cathegoryLabel.setText(Messages.getText("cathegory"));
		scaleLabel.setText(Messages.getText("scale"));
		providerLabel.setText(Messages.getText("provider"));
		coordinatesPanel.setBorder(BorderFactory.createTitledBorder(Messages.getText("coordinates")));
		upperCoordinatesPanel.setBorder(BorderFactory.createTitledBorder(Messages.getText("upperCoordinates")));
		lowerCoordinatesPanel.setBorder(BorderFactory.createTitledBorder(Messages.getText("lowerCoordinates")));
		ulxLabel.setText(Messages.getText("ULX") + ":");
		ulyLabel.setText(Messages.getText("ULY") + ":");
		brxLabel.setText(Messages.getText("BRX") + ":");
		bryLabel.setText(Messages.getText("BRY") + ":");
		uperUpdateLabel.setText(Messages.getText("from") + ":");
		lowerUpdateLabel.setText(Messages.getText("to") + ":");
	}

	/**
	 * Initializae some components with their default values
	 */
	private void initDefaultValues(){
		cathegoryCombo.removeAllItems();
		scaleCombo.removeAllItems();
		coordinatesRelationshipCombo.removeAllItems();
		abstractText1.setText("");
		keywordsText.setText("");
		providerText.setText("");
		ulxText.setText("");
		ulyText.setText("");
		brxText.setText("");
		bryText.setText("");
		uperUpdateText.setText("");
		loweruperUpdateText.setText("");
	}

	/**
	 * Add a coordinates relationship
	 * @param text
	 */
	public void addCoordinatesRelationship(String text) {
		coordinatesRelationshipCombo.addItem(text);		
	}

	/**
	 * Adds a new cathegory
	 * @param text
	 */
	public void addCathegory(String text) {
		cathegoryCombo.addItem(text);		
	}

	/**
	 * Adds a new scale
	 * @param text
	 */
	public void addScale(String text) {
		scaleCombo.addItem(text);		
	}

	/**
	 * @return the title option
	 */
	public String getTitleOption() {
		if (exactRButton.isSelected()) {
			return CatalogConstants.EXACT_WORDS;
		}else if (anyRButton.isSelected()) {
			return CatalogConstants.ANY_WORD;
		}else if (allRButton.isSelected()) {
			return CatalogConstants.ALL_WORDS;
		}
		return CatalogConstants.ANY_WORD;
	}

	/**
	 * @return the abstract
	 */
	public String getAbstract() {
		if (abstractText1.getText().equals("")){
			return null;
		}
		return abstractText1.getText();
	}

	/**
	 * @return the keyword field
	 */
	public String getKeys() {
		if (keywordsText.getText().equals("")){
			return null;
		}
		return keywordsText.getText();
	}

	/**
	 * @return the cathegory
	 */
	public String getCathegory() {
		String cathegory = (String)cathegoryCombo.getSelectedItem();
		if (cathegory.compareTo(Messages.getText("cathegoryAny")) == 0){
			return null;
		}
		return cathegory;
	}

	/**
	 * @return the scale
	 */
	public String getScale() {
		String scale = (String)scaleCombo.getSelectedItem();
		if (scale.compareTo(Messages.getText("scaleAny")) == 0){
			return null;
		}
		return scale;
	}

	/**
	 * @return the provider
	 */
	public String getProvider() {
		if (providerText.getText().equals("")){
			return null;
		}
		return providerText.getText();
	}

	/**
	 * @return the date from field
	 */
	public String getDateFrom() {
		if (uperUpdateText.getText().equals("")){
			return null;
		}
		return uperUpdateText.getText();
	}

	/**
	 * @return the date to field
	 */
	public String getDateTo() {
		if (loweruperUpdateText.getText().equals("")){
			return null;
		}
		return loweruperUpdateText.getText();
	}

	/**
	 * @return the coordinates
	 */
	public Coordinates getCoordinates() {        
		return new Coordinates(ulxText.getText(), ulyText.getText(),
				brxText.getText(), bryText.getText());
	} 

	/**
	 * @return the coordinates relationship
	 */
	public String getCoordinatesOption() {        
		return (String) coordinatesRelationshipCombo.getSelectedItem();
	} 


	/**
	 * Set the coordinates
	 * @param coordinates
	 * The coordinates to set
	 */
	public void setCoordinates(Coordinates coordinates) {        
		ulxText.setText(Doubles.get5Decimals(coordinates.ulx));
		ulyText.setText(Doubles.get5Decimals(coordinates.uly));
		brxText.setText(Doubles.get5Decimals(coordinates.brx));
		bryText.setText(Doubles.get5Decimals(coordinates.bry));
	} 

}
