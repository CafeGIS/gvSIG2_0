
/* gvSIG. Sistema de Información Geográfica de la Generalitat Valenciana
 *
 * Copyright (C) 2004 IVER T.I. and Generalitat Valenciana.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307,USA.
 *
 * For more information, contact:
 *
 *  Generalitat Valenciana
 *   Conselleria d'Infraestructures i Transport
 *   Av. Blasco Ibáñez, 50
 *   46010 VALENCIA
 *   SPAIN
 *
 *      +34 963862235
 *   gvsig@gva.es
 *      www.gvsig.gva.es
 *
 *    or
 *
 *   IVER T.I. S.A
 *   Salamanca 50
 *   46005 Valencia
 *   Spain
 *
 *   +34 963163400
 *   dac@iver.es
 */
package org.gvsig.catalog.ui.search;
import java.awt.Dimension;
import java.awt.event.ActionListener;

import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JPanel;

import org.gvsig.catalog.querys.Search;
import org.gvsig.catalog.utils.CatalogConstants;
import org.gvsig.i18n.Messages;


/**
 * @author Jorge Piera Llodra (piera_jor@gva.es)
 */
public class SearchUpperPanel extends JPanel {
	private javax.swing.JCheckBox areaCheckBox;
	private javax.swing.JPanel areaPanel;
	private javax.swing.JPanel leftPanel;
	private javax.swing.JPanel leftUpperPanel;
	private javax.swing.JButton resizeButton;
	private javax.swing.JPanel resizePanel;
	private javax.swing.JPanel rigthPanel;
	private javax.swing.JPanel rigthUpperPanel;
	private javax.swing.JComboBox serviceCombo;
	private javax.swing.JLabel serviceLabel;
	private javax.swing.JPanel servicePanel;
	private javax.swing.JLabel titleLabel;
	private javax.swing.JPanel titlePanel;
	private javax.swing.JTextField titleText;
    
	/** Creates new form upperPanel */
	public SearchUpperPanel() {
		initComponents();
		initLabels();
		initDefaultValues();
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	// <editor-fold defaultstate="collapsed" desc=" Código Generado  ">                          
	private void initComponents() {
	    java.awt.GridBagConstraints gridBagConstraints;

        leftPanel = new javax.swing.JPanel();
        titlePanel = new javax.swing.JPanel();
        titleLabel = new javax.swing.JLabel();
        titleText = new javax.swing.JTextField();
        servicePanel = new javax.swing.JPanel();
        serviceLabel = new javax.swing.JLabel();
        serviceCombo = new javax.swing.JComboBox();
        rigthPanel = new javax.swing.JPanel();
        areaPanel = new javax.swing.JPanel();
        areaCheckBox = new javax.swing.JCheckBox();
        resizePanel = new javax.swing.JPanel();
        resizeButton = new javax.swing.JButton();

        setLayout(new java.awt.GridLayout(1, 0));

        leftPanel.setLayout(new java.awt.GridBagLayout());

        titlePanel.setLayout(new java.awt.GridBagLayout());

        titleLabel.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 2);
        titlePanel.add(titleLabel, gridBagConstraints);

        titleText.setText("jTextField1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 2);
        titlePanel.add(titleText, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 5);
        leftPanel.add(titlePanel, gridBagConstraints);

        servicePanel.setLayout(new java.awt.GridBagLayout());

        serviceLabel.setText("jLabel1");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 2, 2);
        servicePanel.add(serviceLabel, gridBagConstraints);

        serviceCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 5, 3, 2);
        servicePanel.add(serviceCombo, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 5);
        leftPanel.add(servicePanel, gridBagConstraints);

        add(leftPanel);

        rigthPanel.setLayout(new java.awt.GridBagLayout());

        rigthPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(72, 1, 1, 1));
        rigthPanel.setPreferredSize(new java.awt.Dimension(100, 40));
        areaPanel.setLayout(new java.awt.GridBagLayout());

        areaPanel.setPreferredSize(new java.awt.Dimension(200, 20));
        areaCheckBox.setText("jCheckBox1");
        areaCheckBox.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        areaCheckBox.setMargin(new java.awt.Insets(0, 0, 0, 0));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        areaPanel.add(areaCheckBox, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.3;
        rigthPanel.add(areaPanel, gridBagConstraints);

        resizePanel.setLayout(new java.awt.GridBagLayout());

        resizePanel.setMaximumSize(null);
        resizePanel.setPreferredSize(new java.awt.Dimension(30, 30));
        resizeButton.setPreferredSize(new java.awt.Dimension(25, 25));
 
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 5);
        resizePanel.add(resizeButton, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
        gridBagConstraints.weightx = 0.7;
        rigthPanel.add(resizePanel, gridBagConstraints);

        add(rigthPanel);
	}// </editor-fold> 

	/**
	 * Initializae some components with their default values
	 */
	private void initDefaultValues(){
		serviceCombo.removeAllItems();
	}
	
	/**
	 * Rewrite the labels
	 */
	private void initLabels(){
		serviceLabel.setText(Messages.getText("services"));
		titleText.setText("");
		titleLabel.setText(Messages.getText("title"));
		areaCheckBox.setText(Messages.getText("restrictArea"));
		resizeButton.setPreferredSize(new Dimension(CatalogConstants.RESIZE_WINDOW_BUTTON_SIZE, 
				CatalogConstants.RESIZE_WINDOW_BUTTON_SIZE));		
	}

	/**
	 * Add a listener for the buttons
	 * @param listener
	 * Listener to add
	 */
	public void addActionListener(ActionListener listener){
		resizeButton.addActionListener(listener);
		resizeButton.setActionCommand("resize");
	}

	/**
	 * Sets the down triangle icon (to maximize)
	 */
	public void setIcon(Icon icon) {        
		resizeButton.setIcon(icon);	
	} 
	
	/**
	 * @return if the are check is clicked
	 */
    public boolean isRestrictAreaClicked() {        
        return areaCheckBox.isSelected();
    } 
    
    /**
     * @return the title 
     */
    public String getTitle(){
    	if (titleText.getText().equals("")){
    		return null;
    	}
    	return titleText.getText();
    }

    /**
     * Adds a new service
     * @param service
     */
    public void addService(Search service){
    	serviceCombo.addItem(service);
    }
    
    /**
     * @return the service
     */
	public Search getService() {
		return (Search)serviceCombo.getSelectedItem();
	 }

	/**
	 * @return if the area checkbox is clicked
	 */
	public boolean getRestrictAreaClicked() {
		return areaCheckBox.isSelected();
	}
}
