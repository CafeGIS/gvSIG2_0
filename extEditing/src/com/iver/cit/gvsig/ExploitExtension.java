/* gvSIG. Sistema de Información Geográfica de la Generalitat Valenciana
 *
 * Copyright (C) 2004 IVER T.I. and Generalitat Valenciana.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307,USA.
 *
 * For more information, contact:
 *
 *  Generalitat Valenciana
 *   Conselleria d'Infraestructures i Transport
 *   Av. Blasco Ibáñez, 50
 *   46010 VALENCIA
 *   SPAIN
 *
 *      +34 963862235
 *   gvsig@gva.es
 *      www.gvsig.gva.es
 *
 *    or
 *
 *   IVER T.I. S.A
 *   Salamanca 50
 *   46005 Valencia
 *   Spain
 *
 *   +34 963163400
 *   dac@iver.es
 */
package com.iver.cit.gvsig;

import org.gvsig.fmap.dal.exception.DataException;
import org.gvsig.fmap.dal.feature.DisposableIterator;
import org.gvsig.fmap.dal.feature.Feature;
import org.gvsig.fmap.dal.feature.FeatureSelection;
import org.gvsig.fmap.mapcontrol.MapControl;

import com.iver.andami.PluginServices;
import com.iver.andami.messages.NotificationManager;
import com.iver.andami.plugins.Extension;
import com.iver.cit.gvsig.gui.cad.tools.ExploitCADTool;
import com.iver.cit.gvsig.layers.VectorialLayerEdited;
import com.iver.cit.gvsig.project.documents.view.gui.View;

/**
 * Extensión que gestiona la simplificación de una geometría compuesta en otras más sencillas.
 *
 * @author Vicente Caballero Navarro
 */
public class ExploitExtension extends Extension {
	private View view;

	private MapControl mapControl;
	private ExploitCADTool exploit;

	/**
	 * @see com.iver.andami.plugins.IExtension#initialize()
	 */
	public void initialize() {
		exploit=new ExploitCADTool();
		CADExtension.addCADTool("_exploit",exploit);

		registerIcons();
	}

	private void registerIcons(){
		PluginServices.getIconTheme().registerDefault(
				"edition-geometry-exploit",
				this.getClass().getClassLoader().getResource("images/Exploit.png")
			);
	}

	/**
	 * @see com.iver.andami.plugins.IExtension#execute(java.lang.String)
	 */
	public void execute(String s) {
		CADExtension.initFocus();
		if (s.equals("_exploit")) {
        	CADExtension.setCADTool(s,true);
        }
		CADExtension.getEditionManager().setMapControl(mapControl);
		CADExtension.getCADToolAdapter().configureMenu();
	}

	/**
	 * @see com.iver.andami.plugins.IExtension#isEnabled()
	 */
	public boolean isEnabled() {
		DisposableIterator iterator = null;
		try {
			if (EditionUtilities.getEditionStatus() == EditionUtilities.EDITION_STATUS_ONE_VECTORIAL_LAYER_ACTIVE_AND_EDITABLE) {
				view = (View) PluginServices.getMDIManager().getActiveWindow();
				mapControl = view.getMapControl();
				EditionManager em=CADExtension.getEditionManager();
				if (em.getActiveLayerEdited()==null) {
					return false;
				}
				VectorialLayerEdited vle=(VectorialLayerEdited)em.getActiveLayerEdited();
//				FLyrVect lv=(FLyrVect)vle.getLayer();
				if (((FeatureSelection)vle.getFeatureStore().getSelection()).getSize()<1) {
					return false;
				}
//				ArrayList selectedRows=vle.getSelectedRow();
//				if (selectedRows.size()<1) {
//					return false;
//				}
				iterator = ((FeatureSelection) vle.getFeatureStore()
						.getSelection()).iterator();
				if (iterator.hasNext()){
					Feature feature = (Feature) iterator.next();
					if (feature.getDefaultGeometry()!=null && exploit.isApplicable((feature.getDefaultGeometry()).getType())){
						return true;
					}
				}
			}
		} catch (DataException e) {
			NotificationManager.addError(e.getMessage(),e);
		} finally {
			if (iterator != null) {
				iterator.dispose();
			}
		}
		return false;
	}

	/**
	 * @see com.iver.andami.plugins.IExtension#isVisible()
	 */
	public boolean isVisible() {
		if (EditionUtilities.getEditionStatus() == EditionUtilities.EDITION_STATUS_ONE_VECTORIAL_LAYER_ACTIVE_AND_EDITABLE) {
			return true;
		}
		return false;
	}
}
