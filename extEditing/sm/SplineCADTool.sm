// -*- tab-width: 4; -*-

%{
//
// Vicente Caballero Navarro
%}

%start Spline::FirstPoint
%class SplineCADTool
%package com.iver.cit.gvsig.gui.cad.tools.smc
%import com.iver.cit.gvsig.gui.cad.tools.SplineCADTool
%import java.awt.event.InputEvent
%import com.iver.andami.PluginServices

%map Spline
%%
// A task begins life in suspended animation.

FirstPoint

	Entry {
		setQuestion(
		PluginServices.getText(this,"insert_first_point"));
		setDescription(new String[]{"cancel"});
		}
	Exit{
		}

	{
		addPoint( pointX:double,pointY:double,event:InputEvent)
			NextPoint{
				setQuestion(
					PluginServices.getText(this,"insert_next_point")+", "+
					PluginServices.getText(this,"close")+" "+
					"["+PluginServices.getText(this,"SplineCADTool.close")+"] "+
					PluginServices.getText(this,"cad.or")+" "+
					PluginServices.getText(this,"end")+" "+
					"["+PluginServices.getText(this,"SplineCADTool.end")+"]");
				setDescription(new String[]{"close","terminate","cancel"});
				addPoint( pointX,pointY,event);
				}
	}
NextPoint{

	addOption(s:String)
		[s.equalsIgnoreCase(PluginServices.getText(this,"SplineCADTool.close")) || s.equals(PluginServices.getText(this,"close"))]
		FirstPoint {
			addOption(s);
			closeGeometry();
			endGeometry();
			end();
			}
	addOption(s:String)
		[s.equalsIgnoreCase(PluginServices.getText(this,"SplineCADTool.end")) || s.equals(PluginServices.getText(this,"terminate"))]
		FirstPoint {
			addOption(s);
			endGeometry();
			end();
			}
	addPoint( pointX:double,pointY:double,event:InputEvent)
		NextPoint {
			setQuestion(
				PluginServices.getText(this,"insert_next_point")+", "+
				PluginServices.getText(this,"close")+" "+
				"["+PluginServices.getText(this,"SplineCADTool.close")+"] "+
				PluginServices.getText(this,"cad.or")+" "+
				PluginServices.getText(this,"end")+" "+
				"["+PluginServices.getText(this,"SplineCADTool.end")+"]");
			setDescription(new String[]{"close","terminate","cancel"});
			addPoint( pointX,pointY,event);
			}
}

Default
{
	addOption(s:String)
		[s.equals(PluginServices.getText(this,"cancel"))]
		FirstPoint{
			cancel();
			}
	addOption(s:String)
		[s.equals("")]
		FirstPoint{
			endGeometry();
			}
	addOption(s:String)
		FirstPoint{
			throwOptionException(PluginServices.getText(this,"incorrect_option"),s);
			}
	addValue(d:double)
		FirstPoint{
			throwValueException(PluginServices.getText(this,"incorrect_value"),d);
			}
	addPoint(pointX:double,pointY:double,event:InputEvent)
		FirstPoint{
			throwPointException(PluginServices.getText(this,"incorrect_point"),pointX,pointY);
			}
	endPoint(pointX:double,pointY:double,event:InputEvent)
		FirstPoint{
			addPoint( pointX,pointY,event);
			endGeometry();
			}

}
%%
